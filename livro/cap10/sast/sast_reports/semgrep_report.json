{
  "version": "1.131.0",
  "results": [
    {
      "check_id": "python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
      "path": "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/dashboard.py",
      "start": {
        "line": 138,
        "col": 5,
        "offset": 4235
      },
      "end": {
        "line": 138,
        "col": 39,
        "offset": 4269
      },
      "extra": {
        "message": "Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql",
            "https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm",
            "https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"
          ],
          "category": "security",
          "technology": [
            "sqlalchemy"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "SQL Injection"
          ],
          "source": "https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query",
          "shortlink": "https://sg.run/2b1L"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.audit.debug-enabled.debug-enabled",
      "path": "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/dashboard.py",
      "start": {
        "line": 225,
        "col": 5,
        "offset": 6949
      },
      "end": {
        "line": 225,
        "col": 35,
        "offset": 6979
      },
      "extra": {
        "message": "Detected Flask app with debug=True. Do not deploy to production with this flag enabled as it will leak sensitive information. Instead, consider using Flask configuration variables or setting 'debug' using system environment variables.",
        "metadata": {
          "cwe": [
            "CWE-489: Active Debug Code"
          ],
          "owasp": "A06:2017 - Security Misconfiguration",
          "references": [
            "https://labs.detectify.com/2015/10/02/how-patreon-got-hacked-publicly-exposed-werkzeug-debugger/"
          ],
          "category": "security",
          "technology": [
            "flask"
          ],
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Active Debug Code"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.audit.debug-enabled.debug-enabled",
          "shortlink": "https://sg.run/dKrd"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/templates/dashboard.html",
      "start": {
        "line": 7,
        "col": 3,
        "offset": 202
      },
      "end": {
        "line": 7,
        "col": 105,
        "offset": 304
      },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": [
            "html"
          ],
          "cwe": [
            "CWE-353: Missing Support for Integrity Check"
          ],
          "owasp": [
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cryptographic Issues"
          ],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/templates/dashboard.html",
      "start": {
        "line": 8,
        "col": 3,
        "offset": 307
      },
      "end": {
        "line": 8,
        "col": 110,
        "offset": 414
      },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": [
            "html"
          ],
          "cwe": [
            "CWE-353: Missing Support for Integrity Check"
          ],
          "owasp": [
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cryptographic Issues"
          ],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/templates/dashboard.html",
      "start": {
        "line": 9,
        "col": 3,
        "offset": 417
      },
      "end": {
        "line": 9,
        "col": 64,
        "offset": 478
      },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": [
            "html"
          ],
          "cwe": [
            "CWE-353: Missing Support for Integrity Check"
          ],
          "owasp": [
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cryptographic Issues"
          ],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    }
  ],
  "errors": [],
  "paths": {
    "scanned": [
      "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/README.md",
      "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/dashboard.py",
      "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/packet_analyzer.py",
      "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/requirements.txt",
      "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/sast_reports/semgrep_report.json",
      "/home/mvdiogo/Downloads/11/2/3/gith/security/livro/cap9/analyzer_net/templates/dashboard.html"
    ]
  },
  "time": {
    "rules": [],
    "rules_parse_time": 2.085814952850342,
    "profiling_times": {
      "config_time": 13.683385610580444,
      "core_time": 3.057706832885742,
      "ignores_time": 0.00201416015625,
      "total_time": 16.743752241134644
    },
    "parsing_time": {
      "total_time": 0.07417511940002441,
      "per_file_time": {
        "mean": 0.018543779850006104,
        "std_dev": 1.0315926044057733e-05
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_files": []
    },
    "scanning_time": {
      "total_time": 0.812023401260376,
      "per_file_time": {
        "mean": 0.0507514625787735,
        "std_dev": 0.002542833769009211
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_files": []
    },
    "matching_time": {
      "total_time": 0.16272306442260742,
      "per_file_and_rule_time": {
        "mean": 0.003968855229819692,
        "std_dev": 4.1107871888081696e-05
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_rules_on_files": []
    },
    "tainting_time": {
      "total_time": 0.04465937614440918,
      "per_def_and_rule_time": {
        "mean": 0.0006665578529016296,
        "std_dev": 4.502387978854151e-07
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_rules_on_defs": []
    },
    "targets": [],
    "total_bytes": 0,
    "max_memory_bytes": 1088777088
  },
  "engine_requested": "OSS",
  "skipped_rules": []
}